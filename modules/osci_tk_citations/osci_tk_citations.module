<?php

function osci_tk_citations_menu() {
	$items = array();

	$items['api/citations'] = array(
		'title'			 	=> t('Process a citation request'),
		'page callback'	 	=> 'osci_tk_citations_request',
		'access callback'	=> TRUE,
		'type'              => MENU_CALLBACK
	);

	// $items['api/citations/demo'] = array(
	// 	'title'			 	=> t('Demonstrate Citation API'),
	// 	'page callback'		=> 'drupal_get_form',
	// 	'page arguments' 	=> array('osci_tk_citations_demo'),
	// 	'access callback'	=> TRUE
	// );

	return $items;
}

function osci_tk_citations_request() {

	header('Cache-Control: no-cache, must-revalidate');
	header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');
	header('Content-type: application/json');

	if (isset($_GET['publication_id']) && !empty($_GET['publication_id'])
		&& isset($_GET['section_id']) && !empty($_GET['section_id'])
		&& isset($_GET['element_id']) && !empty($_GET['element_id'])) {

		$pid = $_GET['publication_id'];
		$sid = $_GET['section_id'];
		$eid = $_GET['element_id'];
		$field = $_GET['field'];
		$revTime = isset($_GET['revision']) ? $_GET['revision'] : time();

		// load the section node and its book-parent section. if no parent, use itself
		//TODO: MAKE SURE THIS IS A PUBLICATION
		$publication = node_load($pid, _osci_tk_utility_retrieve_revision_id_by_timestamp($pid, $revTime));
		if (!$publication) {
			print json_encode(array(
				'success' => FALSE
			));
			return;
		}

		$section = node_load($sid, _osci_tk_utility_retrieve_revision_id_by_timestamp($sid, $revTime));

		$citationData = _osci_tk_epub_get_book_metadata($publication);
		unset($citationData['meta']);
		$citationData['field'] = $field;

		//Get the Creator from section if set
		if (isset($section->field_osci_tk_creator) && isset($section->field_osci_tk_creator['und'])) {
			$citationData['creator'] = array();
			foreach($section->field_osci_tk_creator['und'] as $v) {
				$citationData['creator'][] = $v['value'];
			}
		}

		//Get the Editor from section if set
		if (isset($section->field_osci_tk_editor) &&
			isset($section->field_osci_tk_editor['und']) &&
			strlen($section->field_osci_tk_editor['und'][0]['value']))
		{
			$citationData['editor'] = $section->field_osci_tk_editor['und'][0]['value'];
		}

		$citationData['revision'] = $revTime;
		$citationData['element'] = $eid;
		$citationData['publicationTitle'] = $citationData['title'];
		$citationData['title'] = $section->title;

		drupal_alter('osci_tk_citation', $citationData, $section, $publication);

		// output the json response
		print json_encode(array(
			'success' => TRUE,
			'citation' => $citationData
		));
		return;
	}
	else {
		print json_encode(array('success' => FALSE));
	}
}

function osci_tk_citations_demo() {
	drupal_add_js(drupal_get_path('module', 'osci_tk_citations') . '/js/demo.js');

	$form = array();

	$form['retrieve'] = array(
		'#type'				=> 'fieldset',
		'#title'			=> 'Retrieve Citation Data',
		'#attributes'		=> array('class' => array('retrieve-form'))
	);
	$form['retrieve']['publication_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Publication id',
	);
	$form['retrieve']['section_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Section id',
	);
	$form['retrieve']['element_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Element id',
	);
	$form['retrieve']['revision'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Revision timestamp',
		'#default_value'			=> time()
	);
	$form['retrieve']['submit'] = array(
			'#type'			=> 'button',
			'#title'		=> 'Paragraph id',
			'#value'		=> 'Submit',
			'#required'		=> TRUE
	);
	$form['retrieve']['result'] = array(
			'#type'			=> 'item',
			'#title'		=> 'Result',
			'#markup'		=> '<pre style="width: 600px;"><div id="ret-result"></div></pre>'
	);

	return $form;
}
